version: "3.9"
services:
  frontend:
    image: stran-frontend
    container_name: frontend
    env_file:
      - ./.env.docker
    build:
      context: ./client
      # check the args
      args:
        - NODE_ENV=development
      target: client
    ports:
      - "$CLIENT_PORT:$CLIENT_PORT"
    depends_on:
      - backend
    volumes:
      # for development ease, so that it mounts the code, and as we used nodemon, so it reloads the app on code changes
      - ./client:/usr/src/client
    # deploy:
    #   resources:
    #     limits:
          # cpus: "0.3"
          # add swap memory limit too, to each service in docker compose yaml files
          # memory: 50M

  backend:
    image: stran-backend
    container_name: backend
    env_file:
      - ./.env.docker
    build:
      context: ./server
      args:
        - NODE_ENV=development
      target: server
    depends_on:
      - redis-server
      - blockchain
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
    volumes:
      - ./server:/usr/src/server
    # deploy:
    #   resources:
    #     limits:
          # cpus: "0.3"
          # memory: 50M

  redis-server:
    container_name: redis-server
    image: redis:4.0.6-alpine
    ports:
      - "$REDIS_PORT:$REDIS_PORT"

  blockchain:
    image: stran-blockchain
    container_name: blockchain
    env_file:
      - ./.env.docker
    build:
      context: ./blockchain
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
      target: blockchain
    ports:
      - "$BLOCKCHAIN_PORT:$BLOCKCHAIN_PORT"
    # commented below block of volumes, as we were getting error just for this blockchain service: EACCESS permission denied.
    # Mostly, hardhat probably was writing back to the mount point on the main host, and maybe that was causing error.
    # volumes:
    #   - ./blockchain:/usr/src/blockchain
    # deploy:
    #   resources:
    #     limits:
          # cpus: "0.3"
          # memory: 50M
